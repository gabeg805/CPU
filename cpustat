#!/bin/bash
# ******************************************************************************
# 
# Name:    cpustat
# Author:  Gabriel Gonzalez
# Email:   gabeg@bu.edu
# License: The MIT License (MIT)
# 
# Syntax: cpustat [options]
# 
# Description: Display CPU information, such as architecture and usage.
# 
# Notes: None.
# 
# ******************************************************************************

# Globals
PROG="${0##*/}"
PROGDIR=$(dirname "$(readlink -f "${0}")")

# Source utility
. "${PROGDIR}/../lib/bash/util.sh"

# Exit statuses
STATUS_NORMAL=0
STATUS_GETOPT=1

# ******************************************************************************
# Main
main()
{
    [ $# -eq 0 ] && usage && exit ${STATUS_NORMAL}

    short="hui"
    long="help,usage,info"
    args=$(getopt -o "${short}" --long "${long}" --name "${PROG}" -- "${@}")

    [ $? -ne 0 ] && usage && exit ${STATUS_GETOPT}
    eval set -- "${args}"

    # Parse options
    while true; do
        case "${1}" in
            # Print program usage
            -h|--help) 
                usage
                ;;

            # Print CPU usage
            -u|--usage)
                print_cpu_usage
                ;;

            # Print CPU information
            -i|--info)
                print_cpu_info
                ;;

            # End of options
            --)
                break
                ;;
        esac
        shift
    done
}

# ******************************************************************************
# Print program usage
usage()
{
    echo "Usage ${PROG} [options]"
    echo 
    echo "Options:"
    echo "    -h, --help"
    echo "        Print program usage."
    echo
    echo "    -u, --usage"
    echo "        Print CPU usage for all CPUs."
    echo
    echo "    -i, --info"
    echo "        Print CPU information."
}

# ******************************************************************************
# Print CPU usage
print_cpu_usage()
{
    local allcpus=($(mpstat -P ALL | awk ' { print 100 - $13 } '))
    local line=0
    for cpu in "${allcpus[@]}"; do
        line=$[ ${line} + 1 ]
        if [ ${line} -lt 5 ]; then
            continue
        fi
        echo "CPU $[ ${line} - 5 ]: ${cpu}%"
    done
}

# ******************************************************************************
# Print CPU information
print_cpu_info()
{
    lscpu
}

# ******************************************************************************
# Run script
main "${@}"
